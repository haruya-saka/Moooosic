{"ast":null,"code":"var _jsxFileName = \"/Users/sakaguchi/Documents/moo/Moooosic/Frontend/src/component/Load.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navigate, useLocation, useNavigation, Route, Routes, useNavigate } from \"react-router-dom\";\nimport happy from '../img/happy.png';\nimport angry from '../img/angry.png';\nimport sad from '../img/sadness.png';\nimport surprise from '../img/surprise.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Load = () => {\n  _s();\n  const navigate = useNavigate();\n  const images = [happy, angry, sad, surprise];\n  const [position, setPosition] = useState(0);\n  const location = useLocation();\n  const emotion = location.state.emotion;\n  const [dots, setDots] = useState(\"....\");\n  const [animationStopped, setAnimationStopped] = useState(false);\n  const [jsonDataReceived, setJsonDataReceived] = useState(false);\n  const [fadeOut, setFadeOut] = useState(false); // フェードアウトの状態\n  const [showHappyImage, setShowHappyImage] = useState(false); // happy画像を表示するフラグ\n  const [loading, setLoading] = useState(true); //初回のローディングを判定する\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!animationStopped) {\n        setPosition((position + 1) % images.length);\n        if (dots === \"....\") {\n          setDots(\".\");\n        } else if (dots === \"...\") {\n          setDots(\"....\");\n        } else if (dots === \"..\") {\n          setDots(\"...\");\n        } else {\n          setDots(\"..\");\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [position, dots, animationStopped, emotion]);\n  useEffect(() => {\n    if (fadeOut) {\n      // フェードアウトが開始したらアニメーションを停止\n      setAnimationStopped(true);\n    }\n  }, [fadeOut]);\n  const stopAnimation = () => {\n    setFadeOut(true); // フェードアウトを開始\n    setTimeout(() => {\n      setShowHappyImage(true); // happy画像を表示\n    }, 500); // You can adjust the delay as needed\n  };\n  const sleep = waitTime => {\n    const startTime = Date.now();\n    while (Date.now() - startTime < waitTime);\n  };\n  useEffect(() => {\n    console.log(emotion);\n    初回のレンダリング時;\n    if (!loading) {\n      return;\n    }\n    // リクエストボディを作成\n    const requestBody = {\n      emotion_type: emotion\n    };\n    // POST リクエストを送信\n    fetch('http://localhost:5001/api/random', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestBody)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      // レスポンスデータに対する処理を行う\n      console.log(emotion);\n      setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n      setTimeout(() => {\n        stopAnimation();\n      }, 7000);\n      // 非同期処理を使用して待機し、処理が完了したら navigate を呼び出す\n      setTimeout(() => {\n        navigate('/music', {\n          state: {\n            data\n          }\n        });\n      }, 10000);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    }, [loading, emotion]); // emotionが変更された際に再実行\n    //console.log(emotion)\n  });\n  const imageStyle = {\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    height: '45vh',\n    display: 'flex',\n    backgroundColor: 'black',\n    justifyContent: 'center'\n  };\n  const centerContentStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const text_style = {\n    color: \"white\",\n    fontSize: \"100px\",\n    margin: \"70px\",\n    transition: \"opacity 0.5s\",\n    // よりゆっくりとフェードアウトさせるためにトランジションの持続時間を長く設定\n    opacity: fadeOut ? 0 : 1 // フェードアウトの状態に応じて不透明度を設定\n  };\n  const face_text_style = {\n    color: \"white\",\n    fontSize: \"80px\",\n    margin: \"50px\",\n    opacity: showHappyImage ? 1 : 0,\n    // Apply the fade-in effect\n    transition: \"opacity 0.5s\",\n    // Increase the duration of the fade-in to 2 seconds\n    position: \"absolute\",\n    top: '15%' // Adjust the value to move the text higher\n  };\n  const happyImageStyle = {\n    height: \"400px\",\n    // Set the desired height\n    width: \"400px\",\n    // Set the desired width\n    opacity: showHappyImage ? 1 : 0,\n    // Apply the fade-in effect\n    transition: \"opacity 2s\",\n    // Increase the duration of the fade-in to 2 seconds\n    position: \"absolute\",\n    top: '45%'\n  };\n  let number;\n  if (emotion === \"happy\") {\n    number = 0;\n  } else if (emotion === \"angry\") {\n    number = 1;\n  } else if (emotion === \"sad\") {\n    number = 2;\n  } else if (emotion === \"surprise\") {\n    number = 3;\n  }\n  console.log(number);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: imageStyle,\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `url(${image}) center /200px no-repeat`,\n          position: 'relative',\n          top: 80,\n          flex: 1,\n          transform: `translateY(${index === position ? '-40px' : '0'})`,\n          transition: 'transform 0.5s',\n          opacity: fadeOut ? 0 : 1 // フェードアウトの状態に応じて不透明度を設定\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: imageStyle,\n      children: showHappyImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: centerContentStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            ...face_text_style\n          },\n          children: [\"\\u3042\\u306A\\u305F\\u306E\\u8868\\u60C5\\u306F\", emotion, \"\\u3067\\u3059\\uFF01\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[number],\n          alt: \"emotion\",\n          style: happyImageStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: centerContentStyle,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: text_style,\n          children: [\"Loading\", dots]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Load, \"Vv7zcZKtVqoxo4057ypKfWmc5aQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Load;\nexport default Load;\nvar _c;\n$RefreshReg$(_c, \"Load\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","useLocation","useNavigation","Route","Routes","useNavigate","happy","angry","sad","surprise","jsxDEV","_jsxDEV","Load","_s","navigate","images","position","setPosition","location","emotion","state","dots","setDots","animationStopped","setAnimationStopped","jsonDataReceived","setJsonDataReceived","fadeOut","setFadeOut","showHappyImage","setShowHappyImage","loading","setLoading","interval","setInterval","length","clearInterval","stopAnimation","setTimeout","sleep","waitTime","startTime","Date","now","console","log","初回のレンダリング時","requestBody","emotion_type","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","catch","error","imageStyle","backgroundSize","backgroundPosition","height","display","backgroundColor","justifyContent","centerContentStyle","flexDirection","alignItems","text_style","color","fontSize","margin","transition","opacity","face_text_style","top","happyImageStyle","width","number","children","style","map","image","index","background","flex","transform","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/sakaguchi/Documents/moo/Moooosic/Frontend/src/component/Load.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Navigate, useLocation, useNavigation,  Route, Routes, useNavigate } from \"react-router-dom\";\nimport happy from '../img/happy.png';\nimport angry from '../img/angry.png';\nimport sad from '../img/sadness.png';\nimport surprise from '../img/surprise.png';\n\nconst Load = () => {\n  const navigate = useNavigate();\n  const images = [happy, angry, sad, surprise];\n  const [position, setPosition] = useState(0);\n  const location = useLocation();\n  const emotion = location.state.emotion;\n  const [dots, setDots] = useState(\"....\");\n  const [animationStopped, setAnimationStopped] = useState(false);\n  const [jsonDataReceived, setJsonDataReceived] = useState(false);\n  const [fadeOut, setFadeOut] = useState(false); // フェードアウトの状態\n  const [showHappyImage, setShowHappyImage] = useState(false); // happy画像を表示するフラグ\n  const [ loading, setLoading ] = useState(true);//初回のローディングを判定する\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n      if (!animationStopped) {\n        setPosition((position + 1) % images.length);\n        if (dots === \"....\") {\n          setDots(\".\");\n        } else if (dots === \"...\") {\n          setDots(\"....\");\n        } else if (dots === \"..\") {\n          setDots(\"...\");\n        } else {\n          setDots(\"..\");\n        }\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [position, dots, animationStopped, emotion]);\n\n  useEffect(() => {\n    if (fadeOut) {\n      // フェードアウトが開始したらアニメーションを停止\n      setAnimationStopped(true);\n    }\n  }, [fadeOut]);\n\n  const stopAnimation = () => {\n    setFadeOut(true); // フェードアウトを開始\n    setTimeout(() => {\n      setShowHappyImage(true); // happy画像を表示\n    }, 500); // You can adjust the delay as needed\n\n  };\n\n  const sleep = (waitTime)=>{\n    const startTime = Date.now();\n    while( Date.now() - startTime < waitTime );\n  };\n\nuseEffect(() => {\n      console.log(emotion)\n      初回のレンダリング時\n      if(!loading){\n        return;\n      }\n      // リクエストボディを作成\n      const requestBody = {\n        emotion_type: emotion,\n      };\n      // POST リクエストを送信\n      fetch('http://localhost:5001/api/random', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n        \n      })\n      .then((data) => {\n        console.log(data);\n        // レスポンスデータに対する処理を行う\n        console.log(emotion)\n        setTimeout(() => {\n          setLoading(false);\n        },3000);\n        setTimeout(() => {\n          stopAnimation();\n        }, 7000);\n      // 非同期処理を使用して待機し、処理が完了したら navigate を呼び出す\n      setTimeout(() => {\n        navigate('/music', { state: { data } });\n      }, 10000);\n      })\n      .catch((error) => {\n        console.error('There was a problem with the fetch operation:', error);\n      }, [loading, emotion]); // emotionが変更された際に再実行\n      //console.log(emotion)\n} )\n\n  const imageStyle = {\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    height: '45vh',\n    display: 'flex',\n    backgroundColor: 'black',\n    justifyContent: 'center',\n  };\n\n  const centerContentStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  };\n\n  const text_style = {\n    color: \"white\",\n    fontSize: \"100px\",\n    margin: \"70px\",\n    transition: \"opacity 0.5s\", // よりゆっくりとフェードアウトさせるためにトランジションの持続時間を長く設定\n    opacity: fadeOut ? 0 : 1, // フェードアウトの状態に応じて不透明度を設定\n  };\n\n  const face_text_style = {\n    color: \"white\",\n    fontSize: \"80px\",\n    margin: \"50px\",\n    opacity: showHappyImage ? 1 : 0, // Apply the fade-in effect\n    transition: \"opacity 0.5s\", // Increase the duration of the fade-in to 2 seconds\n    position: \"absolute\",\n    top: '15%', // Adjust the value to move the text higher\n  };\n\n  const happyImageStyle = {\n    height: \"400px\", // Set the desired height\n    width: \"400px\", // Set the desired width\n    opacity: showHappyImage ? 1 : 0, // Apply the fade-in effect\n    transition: \"opacity 2s\", // Increase the duration of the fade-in to 2 seconds\n    position: \"absolute\",\n    top: '45%',\n  };\n\n  let number;\n  if(emotion === \"happy\"){\n    number = 0;\n  }else if(emotion === \"angry\"){\n    number = 1;\n  }else if(emotion === \"sad\"){\n    number = 2;\n  }else if(emotion === \"surprise\"){\n    number = 3;\n  }\n  console.log(number)\n  \n  return (\n    <div>\n      <div style={imageStyle}>\n        {images.map((image, index) => (\n          <div\n            key={index}\n            style={{\n              background: `url(${image}) center /200px no-repeat`,\n              position: 'relative',\n              top: 80,\n              flex: 1,\n              transform: `translateY(${index === position ? '-40px' : '0'})`,\n              transition: 'transform 0.5s',\n              opacity: fadeOut ? 0 : 1, // フェードアウトの状態に応じて不透明度を設定\n            }}\n          ></div>\n        ))}\n      </div>\n      <div style={imageStyle}>\n        {showHappyImage ? (\n          <div style={centerContentStyle}>\n            <p style={{ ...face_text_style}}>あなたの表情は{emotion}です！</p>\n            <img src={ images[number] } alt=\"emotion\" style={happyImageStyle} />\n          </div>\n        ) : (\n          <div style={centerContentStyle}>\n            <p style={text_style}>Loading{dots}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Load;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}